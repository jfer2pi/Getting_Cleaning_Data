q3 <- gdpmerge[13, 3]
q3
avgs <- gdpfilesel %>% merge(edufile, by = "CountryCode") %>%
tbl_df() %>%
filter(Ranking != "") %>%
group_by(Income.Group) %>%
summarize(avg = mean(as.numeric(Ranking), na.rm = T))
avgs
```
avgs <- gdpmerge %>%
group_by(Income.Group) %>%
summarize(avg = mean(as.numeric(Ranking), na.rm = T))
avgs
splits <- gdpmerge %>% group_by(quantile(gdpmerge, Ranking, probs = seq(0, 1, 0.2)))
?cut
?split
?xtable
?filter
?filter
splits <- gdpmerge$Ranking %>% quantile(probs = seq(0, 1, 0.2), na.rm = T)
splitgdp <- gdpmerge %>%
mutate(Ranking = cut(Ranking, breaks = splits)) %>%
filter(Income.Group, "Lower middle income")
splits <- gdpmerge$Ranking %>% quantile(probs = seq(0, 1, 0.2), na.rm = T)
splitgdp <- gdpmerge %>%
mutate(Ranking = cut(Ranking, breaks = splits)) %>%
filter(Income.Group == "Lower middle income")
splitgdp
?table
splits <- gdpmerge$Ranking %>% quantile(probs = seq(0, 1, 0.2), na.rm = T)
splitgdp <- gdpmerge %>%
mutate(Ranking = cut(Ranking, breaks = splits)) %>%
filter(Income.Group == "Lower middle income") %>%
select(Ranking) %>%
table()
splitgdp
?rename
---
title: "Getting and Cleaning Data:  Week 3 Quiz"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
#install.packages("jpeg")
library(jpeg)
library(dplyr)
```
## Question 1
The American Community Survey distributes downloadable data about United States communities.
Download the 2006 microdata survey about housing for the state of Idaho using download.file() from here:
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
and load the data into R. The code book, describing the variable names is here:
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
Create a logical vector that identifies the households on greater than 10 acres who sold more than $10,000 worth of agriculture products. Assign that logical vector to the variable agricultureLogical. Apply the which() function like this to identify the rows of the data frame where the logical vector is TRUE.
which(agricultureLogical)
What are the first 3 values that result?
##### Set the working directory:
```{r setwd, echo=TRUE}
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_3")
```
##### Download file and create a logical vector where ACR = 3 and AGS = 6:
```{r download1, echo=TRUE}
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
conn1 <- download.file(url1, "idaho.csv", method = "curl")
file1 <- read.csv("idaho.csv", header = T)
file1 <- tbl_df(file1)
agricultureLogical <- (file1$ACR == 3 & file1$AGS == 6)
q1 <- which(agricultureLogical)[1:3]
```
##### Answer to Question 1:
```{r answer1, echo=TRUE}
q1
```
## Question 2
Using the jpeg package read in the following picture of your instructor into R
https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
Use the parameter native=TRUE. What are the 30th and 80th quantiles of the resulting data?
(some Linux systems may produce an answer 638 different for the 30th quantile)
``` {r download2, echo=TRUE}
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
conn2 <- download.file(url2, "jeff.jpg", method = "curl")
jeff <- readJPEG("jeff.jpg", native = TRUE)
qwant <- c(0.3, 0.8)
q2 <- quantile(jeff, qwant)
q2
```
``` {r question3, echo=TRUE}
urlgdp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
urledu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
congdp <- download.file(urlgdp, "gdp.csv", method = "curl")
conedu <- download.file(urledu, "edu.csv", method = "curl")
gdpfile <- read.csv("gdp.csv", header = T, skip = 4, nrows = 215)
edufile <- read.csv("edu.csv", header = T)
#head(gdpfile)
#head(edufile)
gdpfilesel <- gdpfile %>%
tbl_df() %>%
select(X, X.1, X.3, X.4) %>%
colnames() <- c("CountryCode","Ranking", "Long.Name", "GDP")
edufile <- edufile %>% tbl_df()
gdpmerge <- gdpfilesel %>% merge(edufile, by = "CountryCode") %>%
tbl_df() %>%
filter(Ranking != "") %>%
mutate(GDP = gsub(",","",GDP)) %>%
mutate(GDP = as.numeric(GDP)) %>%
mutate(Ranking = as.numeric(Ranking)) %>%
arrange(GDP)
q <- nrow(gdpmerge)
q
q3 <- gdpmerge[13, 3]
q3
avgs <- gdpmerge %>%
group_by(Income.Group) %>%
summarize(avg = mean(as.numeric(Ranking), na.rm = T))
avgs
splits <- gdpmerge$Ranking %>% quantile(probs = seq(0, 1, 0.2), na.rm = T)
splitgdp <- gdpmerge %>%
mutate(Ranking = cut(Ranking, breaks = splits)) %>%
filter(Income.Group == "Lower middle income") %>%
select(Ranking) %>%
table()
splitgdp
```
---
title: "Getting and Cleaning Data:  Week 3 Quiz"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
#install.packages("jpeg")
library(jpeg)
library(dplyr)
```
## Question 1
The American Community Survey distributes downloadable data about United States communities.
Download the 2006 microdata survey about housing for the state of Idaho using download.file() from here:
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
and load the data into R. The code book, describing the variable names is here:
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
Create a logical vector that identifies the households on greater than 10 acres who sold more than $10,000 worth of agriculture products. Assign that logical vector to the variable agricultureLogical. Apply the which() function like this to identify the rows of the data frame where the logical vector is TRUE.
which(agricultureLogical)
What are the first 3 values that result?
##### Set the working directory:
```{r setwd, echo=TRUE}
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_3")
```
##### Download file and create a logical vector where ACR = 3 and AGS = 6:
```{r download1, echo=TRUE}
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
conn1 <- download.file(url1, "idaho.csv", method = "curl")
file1 <- read.csv("idaho.csv", header = T)
file1 <- tbl_df(file1)
agricultureLogical <- (file1$ACR == 3 & file1$AGS == 6)
q1 <- which(agricultureLogical)[1:3]
```
##### Answer to Question 1:
```{r answer1, echo=TRUE}
q1
```
## Question 2
Using the jpeg package read in the following picture of your instructor into R
https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
Use the parameter native=TRUE. What are the 30th and 80th quantiles of the resulting data?
(some Linux systems may produce an answer 638 different for the 30th quantile)
``` {r download2, echo=TRUE}
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
conn2 <- download.file(url2, "jeff.jpg", method = "curl")
jeff <- readJPEG("jeff.jpg", native = TRUE)
qwant <- c(0.3, 0.8)
q2 <- quantile(jeff, qwant)
q2
```
``` {r question3, echo=TRUE}
urlgdp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
urledu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
congdp <- download.file(urlgdp, "gdp.csv", method = "curl")
conedu <- download.file(urledu, "edu.csv", method = "curl")
gdpfile <- read.csv("gdp.csv", header = T, skip = 4, nrows = 215)
edufile <- read.csv("edu.csv", header = T)
#head(gdpfile)
#head(edufile)
gdpfilesel <- gdpfile %>%
tbl_df() %>%
select(X, X.1, X.3, X.4) %>%
rename(c("CountryCode","Ranking", "Long.Name", "GDP"))
edufile <- edufile %>%
tbl_df()
gdpmerge <- gdpfilesel %>% merge(edufile, by = "CountryCode") %>%
tbl_df() %>%
filter(Ranking != "") %>%
mutate(GDP = gsub(",","",GDP)) %>%
mutate(GDP = as.numeric(GDP)) %>%
mutate(Ranking = as.numeric(Ranking)) %>%
arrange(GDP)
q <- nrow(gdpmerge)
q
q3 <- gdpmerge[13, 3]
q3
avgs <- gdpmerge %>%
group_by(Income.Group) %>%
summarize(avg = mean(as.numeric(Ranking), na.rm = T))
avgs
splits <- gdpmerge$Ranking %>% quantile(probs = seq(0, 1, 0.2), na.rm = T)
splitgdp <- gdpmerge %>%
mutate(Ranking = cut(Ranking, breaks = splits)) %>%
filter(Income.Group == "Lower middle income") %>%
select(Ranking) %>%
table()
splitgdp
```
gdpfilesel <- gdpfile %>%
tbl_df() %>%
select(X, X.1, X.3, X.4) %>%
rename(c("CountryCode","Ranking", "Long.Name", "GDP"))
gdpfilesel <- gdpfile %>%
tbl_df() %>%
select(X, X.1, X.3, X.4) %>%
rename(c("CountryCode","Ranking", "Long.Name", "GDP"))
---
title: "Getting and Cleaning Data:  Week 3 Quiz"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
#install.packages("jpeg")
library(jpeg)
library(dplyr)
```
## Question 1
The American Community Survey distributes downloadable data about United States communities.
Download the 2006 microdata survey about housing for the state of Idaho using download.file() from here:
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
and load the data into R. The code book, describing the variable names is here:
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
Create a logical vector that identifies the households on greater than 10 acres who sold more than $10,000 worth of agriculture products. Assign that logical vector to the variable agricultureLogical. Apply the which() function like this to identify the rows of the data frame where the logical vector is TRUE.
which(agricultureLogical)
What are the first 3 values that result?
##### Set the working directory:
```{r setwd, echo=TRUE}
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_3")
```
##### Download file and create a logical vector where ACR = 3 and AGS = 6:
```{r download1, echo=TRUE}
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
conn1 <- download.file(url1, "idaho.csv", method = "curl")
file1 <- read.csv("idaho.csv", header = T)
file1 <- tbl_df(file1)
agricultureLogical <- (file1$ACR == 3 & file1$AGS == 6)
q1 <- which(agricultureLogical)[1:3]
```
##### Answer to Question 1:
```{r answer1, echo=TRUE}
q1
```
## Question 2
Using the jpeg package read in the following picture of your instructor into R
https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
Use the parameter native=TRUE. What are the 30th and 80th quantiles of the resulting data?
(some Linux systems may produce an answer 638 different for the 30th quantile)
``` {r download2, echo=TRUE}
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
conn2 <- download.file(url2, "jeff.jpg", method = "curl")
jeff <- readJPEG("jeff.jpg", native = TRUE)
qwant <- c(0.3, 0.8)
q2 <- quantile(jeff, qwant)
q2
```
``` {r question3, echo=TRUE}
urlgdp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
urledu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
congdp <- download.file(urlgdp, "gdp.csv", method = "curl")
conedu <- download.file(urledu, "edu.csv", method = "curl")
gdpfile <- read.csv("gdp.csv", header = T, skip = 4, nrows = 215)
edufile <- read.csv("edu.csv", header = T)
#head(gdpfile)
#head(edufile)
gdpfilesel <- gdpfile %>%
tbl_df() %>%
select(X, X.1, X.3, X.4) %>%
rename(X = CountryCode, X.1 = Ranking, X.3 = Long.Name, X.4 = GDP)
edufile <- edufile %>%
tbl_df()
gdpmerge <- gdpfilesel %>% merge(edufile, by = "CountryCode") %>%
tbl_df() %>%
filter(Ranking != "") %>%
mutate(GDP = gsub(",","",GDP)) %>%
mutate(GDP = as.numeric(GDP)) %>%
mutate(Ranking = as.numeric(Ranking)) %>%
arrange(GDP)
q <- nrow(gdpmerge)
q
q3 <- gdpmerge[13, 3]
q3
avgs <- gdpmerge %>%
group_by(Income.Group) %>%
summarize(avg = mean(as.numeric(Ranking), na.rm = T))
avgs
splits <- gdpmerge$Ranking %>% quantile(probs = seq(0, 1, 0.2), na.rm = T)
splitgdp <- gdpmerge %>%
mutate(Ranking = cut(Ranking, breaks = splits)) %>%
filter(Income.Group == "Lower middle income") %>%
select(Ranking) %>%
table()
splitgdp
```
gdpfilesel
setwd("~/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4")
---
title: "Week 4 Quiz"
author: "Fernando Rodriguez"
date: "9/9/2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r question1, echo=TRUE}
setwd("~/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4")
install.packages("dplyr")
install.packages("lubridate")
install.packages("dplyr")
---
title: "Week 4 Quiz"
author: "Fernando Rodriguez"
date: "9/9/2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r question1, echo=TRUE}
setwd("~/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4")
install.packages("lubridate")
# Question 1
library("dplyr")
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
file1 <- "acs.csv"
if(!file.exists(file1)) {
download.file(url1, file1, method = "curl")
acsin <- read.csv(file1, header = TRUE)
}
acsnames <- names(acsin)
strsplit(acsnames, split = "wgtp")[123]
# Question 2
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
file2 <- "gdp.csv"
if(!file.exists(file2)) {
download.file(url2, file2, method = "curl")
}
gdp <- read.csv(file2, header = TRUE, skip = 4, nrows = 215)
gdpsel <- gdp %>%
tbl_df() %>%
select(X.3,X.4)
colnames(gdpsel) <- c("Economy", "GDP")
gdps <- gdpsel %>%
mutate(GDP = gsub(",","", GDP)) %>%
mutate(GDP = as.numeric(GDP))
gdpavg <- mean(gdps$GDP, na.rm = TRUE)
# Question 3
ucount <- length(grep("^United",gdps$Economy))
# Question 4
url4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
file4 <- "edu.csv"
if(!file.exists(file4)) {
download.file(url4, file4, method = "curl")
}
edu <- read.csv(file4, header = TRUE)
edu <- edu %>%
tbl_df()
eduf <- edu[grep("fiscal year end: june", edu$Special.Notes, ignore.case = TRUE) ,]
nrow(eduf)
# Question 5
install.packages("quantmod")
library("quantmod")
amzn <- getSymbols("AMZN", auto.assign = FALSE)
sampleTimes <- index(amzn)
head(sampleTimes)
install.packages("lubridate")
library(lubridate)
sampleTimes <- ymd(sampleTimes)
val2012 <- length(sampleTimes[year(sampleTimes) == 2012])
val2012
val2012mon <- length(sampleTimes[year(sampleTimes) == 2012 & wday(sampleTimes, label = TRUE) == "Mon"])
val2012mon
```
knit_with_parameters('~/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/week4_quiz.Rmd')
---
title: "week4_peer"
author: "Fernando Rodriguez"
date: "9/9/2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Getting and Cleaning Data Course Project
The purpose of this project is to demonstrate your ability to collect, work with, and clean a data set. The goal is to prepare tidy data that can be used for later analysis. You will be graded by your peers on a series of yes/no questions related to the project. You will be required to submit:
* A tidy data set as described below,
* a link to a Github repository with your script for performing the analysis, and
* a code book that describes the variables, the data, and any transformations or work that you performed to clean up the data called CodeBook.md.
You should also include a README.md in the repo with your scripts. This repo explains how all of the scripts work and how they are connected.
One of the most exciting areas in all of data science right now is wearable computing - see for example this article . Companies like Fitbit, Nike, and Jawbone Up are racing to develop the most advanced algorithms to attract new users. The data linked to from the course website represent data collected from the accelerometers from the Samsung Galaxy S smartphone. A full description is available at the site where the data was obtained:
http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones
Here are the data for the project:
https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
You should create one R script called run_analysis.R that does the following.
* Merges the training and the test sets to create one data set.
* Extracts only the measurements on the mean and standard deviation for each measurement.
* Uses descriptive activity names to name the activities in the data set
* Appropriately labels the data set with descriptive variable names.
* From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
Good luck!
```{r download, echo=TRUE}
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
dataset <- download.file(url1, destfile = file1, method = "curl")
# Install zip package to handle zip files
install.packages("zip")
?unzip
getwd()
---
title: "week4_peer"
author: "Fernando Rodriguez"
date: "9/9/2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
wd <- setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4")
```
## Getting and Cleaning Data Course Project
The purpose of this project is to demonstrate your ability to collect, work with, and clean a data set. The goal is to prepare tidy data that can be used for later analysis. You will be graded by your peers on a series of yes/no questions related to the project. You will be required to submit:
* A tidy data set as described below,
* a link to a Github repository with your script for performing the analysis, and
* a code book that describes the variables, the data, and any transformations or work that you performed to clean up the data called CodeBook.md.
You should also include a README.md in the repo with your scripts. This repo explains how all of the scripts work and how they are connected.
One of the most exciting areas in all of data science right now is wearable computing - see for example this article . Companies like Fitbit, Nike, and Jawbone Up are racing to develop the most advanced algorithms to attract new users. The data linked to from the course website represent data collected from the accelerometers from the Samsung Galaxy S smartphone. A full description is available at the site where the data was obtained:
http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones
Here are the data for the project:
https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
You should create one R script called run_analysis.R that does the following.
* Merges the training and the test sets to create one data set.
* Extracts only the measurements on the mean and standard deviation for each measurement.
* Uses descriptive activity names to name the activities in the data set
* Appropriately labels the data set with descriptive variable names.
* From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
Good luck!
```{r download, echo=TRUE}
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
}
# Install zip package to handle zip files
unzip(file1, wd)
---
title: "week4_peer"
author: "Fernando Rodriguez"
date: "9/9/2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
wd <- setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4")
```
## Getting and Cleaning Data Course Project
The purpose of this project is to demonstrate your ability to collect, work with, and clean a data set. The goal is to prepare tidy data that can be used for later analysis. You will be graded by your peers on a series of yes/no questions related to the project. You will be required to submit:
* A tidy data set as described below,
* a link to a Github repository with your script for performing the analysis, and
* a code book that describes the variables, the data, and any transformations or work that you performed to clean up the data called CodeBook.md.
You should also include a README.md in the repo with your scripts. This repo explains how all of the scripts work and how they are connected.
One of the most exciting areas in all of data science right now is wearable computing - see for example this article . Companies like Fitbit, Nike, and Jawbone Up are racing to develop the most advanced algorithms to attract new users. The data linked to from the course website represent data collected from the accelerometers from the Samsung Galaxy S smartphone. A full description is available at the site where the data was obtained:
http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones
Here are the data for the project:
https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
You should create one R script called run_analysis.R that does the following.
* Merges the training and the test sets to create one data set.
* Extracts only the measurements on the mean and standard deviation for each measurement.
* Uses descriptive activity names to name the activities in the data set
* Appropriately labels the data set with descriptive variable names.
* From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
Good luck!
```{r download, echo=TRUE}
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
}
# Install zip package to handle zip files
unzip(file1, exdir = ".")
ls()
rm(ls())
getwd()
setwd("~/UCI HAR Dataset")
setwd("/UCI HAR Dataset")
setwd(""/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/UCI HAR Dataset")
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/UCI HAR Dataset")
names("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/UCI HAR Dataset")
list.files()
setwd("~")
getwd()
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/")
list.files
list.files()
getwd()
files1
