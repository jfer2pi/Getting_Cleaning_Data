testact <- tbl_df(read.table(acttest))
#colnames(testact) <- "Activity"
test <- tbl_df(test)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- tbl_df(read.table(subtrain))
subact <- tbl_df(read.table(acttrain))
train <- tbl_df(read.table(xtrain))
# Join test and train data
jointt <- rbind(test, train)
colnames(jointt) <- features
joinsub <- rbind(testsub, trainsub)
colnames(joinsub) <- "Subject"
joinact <- rbind(testact, subact)
colnames(joinact) <- "Activity"
joinact
joinsub
?join
full_join(joinsub, joinact) -> stuff
jointt
test
train
jointt
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/peer")
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
library(dplyr)
library(readr)
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
unzip(file1, exdir = ".")
}
# Read features names into R, selecting only the 2nd column as the 1st column is just an index
featdir <- "UCI HAR Dataset/features.txt"
features <- read.table(featdir)[,2]
# Read activity keys into R and add useful descriptions to the column names
actdir <- "UCI HAR Dataset/activity_labels.txt"
actlab <- read.table(actdir)
colnames(actlab) <- c("Key", "Description")
# Read test data into R, including base test, subject test, and activity codes
xtest <- "UCI HAR Dataset/test/X_test.txt"
subtest <-  "UCI HAR Dataset/test/subject_test.txt"
acttest <-  "UCI HAR Dataset/test/y_test.txt"
test <- read.table(xtest)
testsub <- read.table(subtest)
#colnames(testsub) <- "Subject"
testact <- read.table(acttest)
#colnames(testact) <- "Activity"
#test <- tbl_df(test)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- read.table(subtrain)
subact <- read.table(acttrain)
train <- read.table(xtrain)
# Join test and train data
jointt <- rbind(test, train)
colnames(jointt) <- features
joinsub <- rbind(testsub, trainsub)
colnames(joinsub) <- "Subject"
joinact <- rbind(testact, subact)
colnames(joinact) <- "Activity"
cbind(jointt, joinsub) -> testing
testing
cbind(jointt, joinsub, joinact) -> testing
testing
tbl_df(testing)
data.frame(testing)
select(jointt, grep("std|mean",colnames(jointt)))
grep("std|mean", colnames(jointt))
grep("std", colnames(jointt))
rm(ls())
rm(list = ls())
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/peer")
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
library(dplyr)
library(readr)
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
unzip(file1, exdir = ".")
}
# Read features names into R, selecting only the 2nd column as the 1st column is just an index
featdir <- "UCI HAR Dataset/features.txt"
features <- read.table(featdir)[,2]
# Read activity keys into R and add useful descriptions to the column names
actdir <- "UCI HAR Dataset/activity_labels.txt"
actlab <- read.table(actdir)
colnames(actlab) <- c("Key", "Description")
# Read test data into R, including base test, subject test, and activity codes
xtest <- "UCI HAR Dataset/test/X_test.txt"
subtest <-  "UCI HAR Dataset/test/subject_test.txt"
acttest <-  "UCI HAR Dataset/test/y_test.txt"
test <- read.table(xtest)
testsub <- read.table(subtest)
#colnames(testsub) <- "Subject"
testact <- read.table(acttest)
#colnames(testact) <- "Activity"
#test <- tbl_df(test)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- read.table(subtrain)
subact <- read.table(acttrain)
train <- read.table(xtrain)
# Join test and train data
jointt <- rbind(test, train)
colnames(jointt) <- features
joinsub <- rbind(testsub, trainsub)
#colnames(joinsub) <- "Subject"
joinact <- rbind(testact, subact)
#colnames(joinact) <- "Activity"
jointt
select(jointt, grepl("std|mean", colnames(jointt)))
select(jointt, grep("std|mean", colnames(jointt)))
grepl("std|mean", colnames(jointt))
grep("std|mean", colnames(jointt))
jointt[,grep("std|mean", colnames(jointt))]
jointt.ms <- jointt[, grep("mean|std", colnames(jointt))]
jointt.ms
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/peer")
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
library(dplyr)
library(readr)
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
unzip(file1, exdir = ".")
}
# Read features names into R, selecting only the 2nd column as the 1st column is just an index
featdir <- "UCI HAR Dataset/features.txt"
features <- read.table(featdir)[,2]
# Read activity keys into R and add useful descriptions to the column names
actdir <- "UCI HAR Dataset/activity_labels.txt"
actlab <- read.table(actdir)
colnames(actlab) <- c("Key", "Description")
# Read test data into R, including base test, subject test, and activity codes
xtest <- "UCI HAR Dataset/test/X_test.txt"
subtest <-  "UCI HAR Dataset/test/subject_test.txt"
acttest <-  "UCI HAR Dataset/test/y_test.txt"
test <- read.table(xtest)
testsub <- read.table(subtest)
#colnames(testsub) <- "Subject"
testact <- read.table(acttest)
#colnames(testact) <- "Activity"
#test <- tbl_df(test)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- read.table(subtrain)
subact <- read.table(acttrain)
train <- read.table(xtrain)
# Join test and train data
jointt <- rbind(test, train)
colnames(jointt) <- features
jointt.ms <- jointt[, grep("mean|std", colnames(jointt))]
joinsub <- rbind(testsub, trainsub)
colnames(joinsub) <- "Subject"
joinact <- rbind(testact, subact)
colnames(joinact) <- "Activity"
joinall <- rbind(jointt.ms, joinsub, joinact)
joinall <- cbind(jointt.ms, joinsub, joinact)
tbl_df(joinall)
?gather
library(tidyr)
?gather
actlab
colnames(joinall)
colnames(actlab) <- c("Key", "Activity")
join <- joinall %>%
gather(key = "Key") %>%
left_join(actlab, by = "Key") %>%
spread(key = Activity, value = Activity)
class(actlab)
class(actlab$Key)
class(joinall$Activity)
join <- joinall %>%
gather(key = Key) %>%
left_join(actlab, by = "Key") %>%
spread(key = Key, value = Activity)
merge(joinall, actlab, by.x = "Activity", by.y = "Activity")
actlab
merge(joinall, actlab, by.x = "Activity", by.y = "Key")
colnames(actlab) <- c("Key", "Description")
merge(joinall, actlab, by.x = "Activity", by.y = "Key")
tail(merge(joinall, actlab, by.x = "Activity", by.y = "Key"))
tail(joinall)
merge(joinall, actlab, by.x = "Activity", by.y = "Key") -> testing
View(testing)
view(joinall)
View(joinall)
joinfinal <- merge(joinall, actlab, by.x = "Activity", by.y = "Key")
joinfinal
joinfinal <- tbl_df(merge(joinall, actlab, by.x = "Activity", by.y = "Key"))
joinfinal
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/peer")
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
library(dplyr)
library(tidyr)
library(readr)
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
unzip(file1, exdir = ".")
}
# Read features names into R, selecting only the 2nd column as the 1st column is just an index
featdir <- "UCI HAR Dataset/features.txt"
features <- read.table(featdir)[,2]
# Read activity keys into R and add useful descriptions to the column names
actdir <- "UCI HAR Dataset/activity_labels.txt"
actlab <- read.table(actdir)
colnames(actlab) <- c("Key", "Activity Description")
# Read test data into R, including base test, subject test, and activity codes
xtest <- "UCI HAR Dataset/test/X_test.txt"
subtest <-  "UCI HAR Dataset/test/subject_test.txt"
acttest <-  "UCI HAR Dataset/test/y_test.txt"
test <- read.table(xtest)
testsub <- read.table(subtest)
#colnames(testsub) <- "Subject"
testact <- read.table(acttest)
#colnames(testact) <- "Activity"
#test <- tbl_df(test)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- read.table(subtrain)
subact <- read.table(acttrain)
train <- read.table(xtrain)
# Join test and train data
jointt <- rbind(test, train)
colnames(jointt) <- features
jointt.ms <- jointt[, grep("mean|std", colnames(jointt))]
joinsub <- rbind(testsub, trainsub)
colnames(joinsub) <- "Subject"
joinact <- rbind(testact, subact)
colnames(joinact) <- "Activity"
joinall <- cbind(jointt.ms, joinsub, joinact)
joinfinal <- tbl_df(merge(joinall, actlab, by.x = "Activity", by.y = "Key"))
jointidy <- joinfinal %>% group_by(Subject, Description)
joinfinal
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/peer")
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
library(dplyr)
library(tidyr)
library(readr)
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
unzip(file1, exdir = ".")
}
# Read features names into R, selecting only the 2nd column as the 1st column is just an index
featdir <- "UCI HAR Dataset/features.txt"
features <- read.table(featdir)[,2]
# Read activity keys into R and add useful descriptions to the column names
actdir <- "UCI HAR Dataset/activity_labels.txt"
actlab <- read.table(actdir)
colnames(actlab) <- c("Key", "Activity_Description")
# Read test data into R, including base test, subject test, and activity codes
xtest <- "UCI HAR Dataset/test/X_test.txt"
subtest <-  "UCI HAR Dataset/test/subject_test.txt"
acttest <-  "UCI HAR Dataset/test/y_test.txt"
test <- read.table(xtest)
testsub <- read.table(subtest)
#colnames(testsub) <- "Subject"
testact <- read.table(acttest)
#colnames(testact) <- "Activity"
#test <- tbl_df(test)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- read.table(subtrain)
subact <- read.table(acttrain)
train <- read.table(xtrain)
# Join test and train data
jointt <- rbind(test, train)
colnames(jointt) <- features
jointt.ms <- jointt[, grep("mean|std", colnames(jointt))]
joinsub <- rbind(testsub, trainsub)
colnames(joinsub) <- "Subject"
joinact <- rbind(testact, subact)
colnames(joinact) <- "Activity"
joinall <- cbind(jointt.ms, joinsub, joinact)
joinfinal <- tbl_df(merge(joinall, actlab, by.x = "Activity", by.y = "Key"))
jointidy <- joinfinal %>% group_by(Subject, Activity Description)
jointidy <- joinfinal %>% group_by(Subject, Activity_Description)
summarize_all(jointidy, mean())
?summarize_all
jointidy <- joinfinal %>%
group_by(Subject, Activity_Description) %>%
summarize_all(mean)
jointidy
?order
?sort
jointidy <- joinfinal %>%
group_by(Subject, Activity_Description) %>%
summarize_all(mean) %>%
arrange(Subject, Activity)
jointidy
getwd()
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/peer")
write.table(jointidy, "UCI HAR Dataset/tidy/tidy.txt")
write.table(jointidy, "UCI HAR Dataset/tidy.txt")
jointt.ms <- jointt[, grep("mean|std", colnames(jointt))]
write_csv(jointidy, "UCI HAR Dataset/tidy.txt")
write_csv(jointidy, "UCI HAR Dataset/tidy.csv")
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/peer")
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/)
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/week_4/")
ls()
setwd("/Users/fer/Dropbox/Coursera DS/Getting_Cleaning_Data/peer/")
# Getting and Cleaning Data: Week 4 Peer Reviewed Project
# You should create one R script called run_analysis.R that does the following.
# Merges the training and the test sets to create one data set.
# Extracts only the measurements on the mean and standard deviation for each measurement.
# Uses descriptive activity names to name the activities in the data set
# Appropriately labels the data set with descriptive variable names.
# From the data set in step 4, creates a second, independent tidy data set
# with the average of each variable for each activity and each subject.
# Data source URL and filename
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
# Include libraries for r
library(dplyr)
library(tidyr)
library(readr)
# Checks if file exists, and avoids downloading it if already there (big file)
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
unzip(file1, exdir = ".")
}
# Read features names into R, selecting only the 2nd column as the 1st column is just an index
featdir <- "UCI HAR Dataset/features.txt"
features <- read.table(featdir)[,2]
# Read activity keys into R and add useful descriptions to the column names
actdir <- "UCI HAR Dataset/activity_labels.txt"
actlab <- read.table(actdir)
colnames(actlab) <- c("Key", "Activity_Description")
# Read test data into R, including base test, subject test, and activity codes
xtest <- "UCI HAR Dataset/test/X_test.txt"
subtest <-  "UCI HAR Dataset/test/subject_test.txt"
acttest <-  "UCI HAR Dataset/test/y_test.txt"
test <- read.table(xtest)
testsub <- read.table(subtest)
testact <- read.table(acttest)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- read.table(subtrain)
subact <- read.table(acttrain)
train <- read.table(xtrain)
# Join test and train data
jointt <- rbind(test, train)
# Name the data with the features labels
colnames(jointt) <- features
# Use grep to select only columns containing the strings "mean" or "std" for average and standard deviation
jointt.ms <- jointt[, grep("mean|std", colnames(jointt))]
# Join subject data, test first, then training, then name the columns as subject
joinsub <- rbind(testsub, trainsub)
colnames(joinsub) <- "Subject"
# Join activity data, test first, then trining, then name the columns as activity
joinact <- rbind(testact, subact)
colnames(joinact) <- "Activity"
# Join features, subject, and activity datasets, then merge with the activity labels to add a useful description
joinall <- cbind(jointt.ms, joinsub, joinact)
joinfinal <- tbl_df(merge(joinall, actlab, by.x = "Activity", by.y = "Key"))
# Chain commands to group by subject and activity description, then use summarize_all to create a mean for each column and
# sort by subject, then activity
jointidy <- joinfinal %>%
group_by(Subject, Activity_Description) %>%
summarize_all(mean) %>%
arrange(Subject, Activity)
# Write tidy file as a CSV
write_csv(jointidy, "UCI HAR Dataset/tidy.csv")
write_csv(jointidy, "tidy.csv")
write.table(jointidy, "tidy.csv", row.names = FALSE)
write.table(jointidy, "tidy.txt", row.names = FALSE)
# Getting and Cleaning Data: Week 4 Peer Reviewed Project
# You should create one R script called run_analysis.R that does the following.
# Merges the training and the test sets to create one data set.
# Extracts only the measurements on the mean and standard deviation for each measurement.
# Uses descriptive activity names to name the activities in the data set
# Appropriately labels the data set with descriptive variable names.
# From the data set in step 4, creates a second, independent tidy data set
# with the average of each variable for each activity and each subject.
# Data source URL and filename
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
# Include libraries for r
library(dplyr)
library(tidyr)
library(readr)
# Checks if file exists, and avoids downloading it if already there (big file)
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
unzip(file1, exdir = ".")
}
# Read features names into R, selecting only the 2nd column as the 1st column is just an index
featdir <- "UCI HAR Dataset/features.txt"
features <- read.table(featdir)[,2]
# Read activity keys into R and add useful descriptions to the column names
actdir <- "UCI HAR Dataset/activity_labels.txt"
actlab <- read.table(actdir)
colnames(actlab) <- c("Key", "Activity_Description")
# Read test data into R, including base test, subject test, and activity codes
xtest <- "UCI HAR Dataset/test/X_test.txt"
subtest <-  "UCI HAR Dataset/test/subject_test.txt"
acttest <-  "UCI HAR Dataset/test/y_test.txt"
test <- read.table(xtest)
testsub <- read.table(subtest)
testact <- read.table(acttest)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- read.table(subtrain)
subact <- read.table(acttrain)
train <- read.table(xtrain)
# Join test and train data
jointt <- rbind(test, train)
# Name the data with the features labels
colnames(jointt) <- features
# Use grep to select only columns containing the strings "mean" or "std" for average and standard deviation
jointt.ms <- jointt[, grep("mean|std|StandDev", colnames(jointt))]
# Join subject data, test first, then training, then name the columns as subject
joinsub <- rbind(testsub, trainsub)
colnames(joinsub) <- "Subject"
# Join activity data, test first, then trining, then name the columns as activity
joinact <- rbind(testact, subact)
colnames(joinact) <- "Activity"
# Join features, subject, and activity datasets, then merge with the activity labels to add a useful description
joinall <- cbind(jointt.ms, joinsub, joinact)
joinfinal <- tbl_df(merge(joinall, actlab, by.x = "Activity", by.y = "Key"))
# Chain commands to group by subject and activity description, then use summarize_all to create a mean for each column and
# sort by subject, then activity
jointidy <- joinfinal %>%
group_by(Subject, Activity_Description) %>%
summarize_all(mean) %>%
arrange(Subject, Activity)
# Write tidy file as a CSV
write.table(jointidy, "tidy.txt", row.names = FALSE)
# Getting and Cleaning Data: Week 4 Peer Reviewed Project
# You should create one R script called run_analysis.R that does the following.
# Merges the training and the test sets to create one data set.
# Extracts only the measurements on the mean and standard deviation for each measurement.
# Uses descriptive activity names to name the activities in the data set
# Appropriately labels the data set with descriptive variable names.
# From the data set in step 4, creates a second, independent tidy data set
# with the average of each variable for each activity and each subject.
# Data source URL and filename
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
file1 <- "dataset.zip"
# Include libraries for r
library(dplyr)
library(tidyr)
library(readr)
# Checks if file exists, and avoids downloading it if already there (big file)
if(!file.exists(file1)) {
dataset <- download.file(url1, destfile = file1, method = "curl")
unzip(file1, exdir = ".")
}
# Read features names into R, selecting only the 2nd column as the 1st column is just an index
featdir <- "UCI HAR Dataset/features.txt"
features <- read.table(featdir)[,2]
# Read activity keys into R and add useful descriptions to the column names
actdir <- "UCI HAR Dataset/activity_labels.txt"
actlab <- read.table(actdir)
colnames(actlab) <- c("Key", "Activity_Description")
# Read test data into R, including base test, subject test, and activity codes
xtest <- "UCI HAR Dataset/test/X_test.txt"
subtest <-  "UCI HAR Dataset/test/subject_test.txt"
acttest <-  "UCI HAR Dataset/test/y_test.txt"
test <- read.table(xtest)
testsub <- read.table(subtest)
testact <- read.table(acttest)
# Read train data into R
xtrain <- "UCI HAR Dataset/train/X_train.txt"
subtrain <- "UCI HAR Dataset/train/subject_train.txt"
acttrain <- "UCI HAR Dataset/train/y_train.txt"
trainsub <- read.table(subtrain)
subact <- read.table(acttrain)
train <- read.table(xtrain)
# Join test and train data
jointt <- rbind(test, train)
# Name the data with the features labels
colnames(jointt) <- features
# Use grep to select only columns containing the strings "mean" or "std" for average and standard deviation
jointt.ms <- jointt[, grep("mean|std|StandDev", colnames(jointt))]
# Join subject data, test first, then training, then name the columns as subject
joinsub <- rbind(testsub, trainsub)
colnames(joinsub) <- "Subject"
# Join activity data, test first, then trining, then name the columns as activity
joinact <- rbind(testact, subact)
colnames(joinact) <- "Activity"
# Join features, subject, and activity datasets, then merge with the activity labels to add a useful description
joinall <- cbind(jointt.ms, joinsub, joinact)
joinfinal <- tbl_df(merge(joinall, actlab, by.x = "Activity", by.y = "Key"))
# Chain commands to group by subject and activity description, then use summarize_all to create a mean for each column and
# sort by subject, then activity
jointidy <- joinfinal %>%
group_by(Subject, Activity_Description) %>%
summarize_all(mean) %>%
arrange(Subject, Activity)
# Write tidy file as a CSV
write.table(jointidy, "tidy.txt", row.names = FALSE)
